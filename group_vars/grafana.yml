certbot_auto_renew: yes
certbot_auto_renew_user: root
certbot_auto_renew_hour: 3
certbot_auto_renew_minute: 30

certbot_environment: production #staging
certbot_domains:
  - "{{ hostname }}"
certbot_agree_tos: --agree-tos
certbot_admin_email: simon.gladman@unimelb.edu.au
certbot_post_renewal: |
    cp /etc/letsencrypt/live/{{ hostname }}/fullchain.pem /etc/ssl/certs/{{ hostname }}
    cp /etc/letsencrypt/live/{{ hostname }}/privkey.pem   /etc/ssl/private/privkey.pem
    chmod 644 /etc/ssl/certs/{{ hostname }}
    chmod 640 /etc/ssl/private/privkey.pem
    chmod 750 /etc/ssl/private/
    chown www-data:www-data /etc/ssl/private/privkey.pem
    chown www-data:www-data -R /etc/ssl/private/privkey.pem
    systemctl restart nginx || true

nginx_remove_default_vhost: true
nginx_vhosts:
  - listen: "80"
    server_name: "{{ hostname }}"
    return: "301 https://{{ hostname }}$request_uri"
    filename: "{{ hostname }}.80.conf"

  - listen: "443 ssl"
    server_name: "{{ hostname }}"
    root: "/var/www/{{ hostname }}"
    index: "index.html"
    access_log: "/var/log/nginx/access.log"
    error_log: "/var/log/nginx/error.log"
    state: "present"
    filename: "{{ hostname }}.conf"
    extra_parameters: |

        location /raw {
            root /var/www/html/;
        }

        location / {
            proxy_set_header           Host $host:$server_port;
            proxy_set_header           X-Real-IP $remote_addr;
            proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header           X-Forwarded-Proto $scheme;
            proxy_pass                 http://127.0.0.1:3000;
            proxy_pass_request_headers on;
        }
        ssl_certificate /etc/ssl/certs/{{ hostname }};
        ssl_certificate_key /etc/ssl/private/privkey.pem;

        ssl_protocols TLSv1.2;# Requires nginx >= 1.13.0 else use TLSv1.2
        ssl_prefer_server_ciphers on;
        #ssl_dhparam /etc/nginx/dhparam.pem; # openssl dhparam -out /etc/nginx/dhparam.pem 4096
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
        ssl_session_timeout  10m;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off; # Requires nginx >= 1.5.9
        ssl_stapling on; # Requires nginx >= 1.3.7
        ssl_stapling_verify on; # Requires nginx => 1.3.7

        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Robots-Tag none;

# grafana_server_domain: "{{ hostname }}"
# grafana_users_default_theme: "light"
# # Enable anonymous access
# grafana_auth__anonymous_enabled: "true"
# # Specify organization name that should be used for unauthenticated users
# grafana_auth__anonymous_org_name: UseGalaxy.eu
# # Specify role for unauthenticated users
# grafana_auth__anonymous_org_role: Viewer

# grafana_auth__github:
#   enabled: "true"
#   allow_sign_up: "true"
#   client_id: "{{ grafana_auth__github_client_id }}"
#   client_secret: "{{ grafana_auth__github_client_secret }}"
#   scopes: "user:email,read:org"
#   auth_url: "https://github.com/login/oauth/authorize"
#   token_url: "https://github.com/login/oauth/access_token"
#   api_url: "https://api.github.com/user"
#   allowed_organisations: "usegalaxy.eu galaxyproject"


telegraf_plugins_extra:
  - plugin: exec
    config:
      - commands = ["/usr/bin/simple-nagios"]
      - timeout = "120s"
      - data_format = "influx"
      - interval = "1m"

  - plugin: exec
    disambiguation: galaxy-jobs
    config:
      - commands = ["/usr/local/bin/simple-galaxy"]
      - timeout = "180s"
      - data_format = "influx"
      - interval = "15m"

  - plugin: dns_query
    config:
      - servers = ["8.8.8.8", "132.230.201.111", "132.230.200.200"]
      - timeout = 15
      - domains = ["google.com", "usegalaxy.eu", "registry.npmjs.org"]
      - record_type = "A"
      - interval = "5m"

galaxy_test_url: https://galaxy-mel.genome.edu.au/galaxy
galaxy_test_user:
    api_key: "{{ galaxy_test_user__api_key }}"
    username: bot@usegalaxy.org.au
    password: "{{ galaxy_test_user__password }}"
    handlers:
        - "main"

galaxy_nagios_urls:
#  ftp_tests:
#    - name: ftp_ssl
#      url: ftp://ftp.galaxy-mel.genome.edu.au

#  ftp_age_tests:
#    - name: ftp_age
#      url: https://galaxy-mel.genome.edu.au

  http_tests:
    - name: home_nossl
      url: "http://galaxy-mel.genome.edu.au/galaxy"
      code: 301
    - name: home
      url: "https://galaxy-mel.genome.edu.au/galaxy"
      code: 200
#    - name: hicexplorer
#      url: "https://hicexplorer.usegalaxy.eu"
#      code: 200
    - name: stats
      url: "https://stats.genome.edu.au"
      code: 200
#    - name: apollo
#      url: "https://apollo.usegalaxy.eu/apollo_api/annotator/index"
#      code: 200
#    - name: grt
#      url: "https://telescope.galaxyproject.org/"
#      code: 200
#    - name: grt_api
#      url: "https://telescope.galaxyproject.org/api/instance/top_all.json"
#      code: 200
#    - name: grt_login
#      url: "https://telescope.galaxyproject.org/grt-admin/accounts/login/"
#      code: 200
#    - name: build
#      url: "https://build.usegalaxy.eu"
#      code: 200
#    - name: sql
#      url: "https://sql.usegalaxy.eu/lgoin/"
#      code: 200
#    - name: csp
#      url: "https://csp.usegalaxy.eu"
#      code: 200
#    - name: git
#      url: "https://gitlab.denbi.uni-freiburg.de/users/sign_in"
#      code: 200
#    - name: ftp_docs
#      url: "https://ftp.usegalaxy.eu"
#      code: 200
#    - name: influx
#      url: "http://influxdb.denbi.uni-freiburg.de:8086/ping"
#      code: 204
#    - name: sentry
#      url: "https://sentry.denbi.uni-freiburg.de/auth/login/sentry/"
#      code: 200
